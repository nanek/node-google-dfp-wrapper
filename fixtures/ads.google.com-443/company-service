GET /apis/ads/publisher/v201508/CompanyService?wsdl
accept: text/html,application/xhtml+xml,application/xml,text/xml;q=0.9,*/*;q=0.8
accept-encoding: none
accept-charset: utf-8
host: ads.google.com

HTTP/1.1 200 undefined
content-type: text/xml
date: Sat, 12 Dec 2015 18:04:54 GMT
expires: Sat, 12 Dec 2015 18:04:54 GMT
cache-control: private, max-age=0
x-content-type-options: nosniff
x-frame-options: SAMEORIGIN
x-xss-protection: 1; mode=block
server: GSE
alternate-protocol: 443:quic,p=0
alt-svc: clear
accept-ranges: none
vary: Accept-Encoding
connection: close

<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated file, do not edit -->
<!-- Copyright 2015 Google Inc. All Rights Reserved -->
<wsdl:definitions
  targetNamespace="https://www.google.com/apis/ads/publisher/v201508"
  xmlns:tns="https://www.google.com/apis/ads/publisher/v201508"
  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
  xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <schema elementFormDefault="qualified" jaxb:version="1.0"
      targetNamespace="https://www.google.com/apis/ads/publisher/v201508"
      xmlns="http://www.w3.org/2001/XMLSchema"
      xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:tns="https://www.google.com/apis/ads/publisher/v201508">
      <annotation>
        <appinfo>
          <jaxb:globalBindings typesafeEnumMaxMembers="999999"/>
        </appinfo>
      </annotation>
      <complexType abstract="true" name="ObjectValue">
        <annotation>
          <documentation>
            Contains an object value.
            &lt;p&gt;
            &lt;b&gt;This object is experimental!
            &lt;code&gt;ObjectValue&lt;/code&gt; is an experimental, innovative, and rapidly
            changing new feature for DFP. Unfortunately, being on the bleeding edge means that we may make
            backwards-incompatible changes to
            &lt;code&gt;ObjectValue&lt;/code&gt;. We will inform the community when this feature
            is no longer experimental.&lt;/b&gt;
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="ApiError">
        <annotation>
          <documentation>
            The API error base class that provides details about an error that occurred
            while processing a service request.
            
            &lt;p&gt;The OGNL field path is provided for parsers to identify the request data
            element that may have caused the error.&lt;/p&gt;
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="fieldPath" type="xsd:string">
            <annotation>
              <documentation>
                The OGNL field path to identify cause of error.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="trigger" type="xsd:string">
            <annotation>
              <documentation>
                The data that caused the error.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="errorString" type="xsd:string">
            <annotation>
              <documentation>
                A simple string representation of the error and reason.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="ApiException">
        <annotation>
          <documentation>
            Exception class for holding a list of service errors.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApplicationException">
            <sequence>
              <element maxOccurs="unbounded" minOccurs="0" name="errors" type="tns:ApiError">
                <annotation>
                  <documentation>
                    List of errors.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ApiVersionError">
        <annotation>
          <documentation>
            Errors related to the usage of API versions.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ApiVersionError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ApplicationException">
        <annotation>
          <documentation>
            Base class for exceptions.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="message" type="xsd:string">
            <annotation>
              <documentation>
                Error message.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="AppliedLabel">
        <annotation>
          <documentation>
            Represents a {@link Label} that can be applied to an entity. To negate an
            inherited label, create an {@code AppliedLabel} with {@code labelId} as the
            inherited label's ID and {@code isNegated} set to true.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="labelId" type="xsd:long">
            <annotation>
              <documentation>
                The ID of a created {@link Label}.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="isNegated" type="xsd:boolean">
            <annotation>
              <documentation>
                {@code isNegated} should be set to {@code true} to negate the effects of
                {@code labelId}.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="AuthenticationError">
        <annotation>
          <documentation>
            An error for an exception that occurred when authenticating.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:AuthenticationError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AvailableBillingError">
        <annotation>
          <documentation>
            Lists all errors associated with the availability of billing settings based on
            proposal network settings.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:AvailableBillingError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="BooleanValue">
        <annotation>
          <documentation>
            Contains a boolean value.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="xsd:boolean">
                <annotation>
                  <documentation>
                    The boolean value.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CollectionSizeError">
        <annotation>
          <documentation>
            Error for the size of the collection being too large
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:CollectionSizeError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CommonError">
        <annotation>
          <documentation>
            A place for common errors that can be used across services.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:CommonError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CompanyCreditStatusError">
        <annotation>
          <documentation>
            Lists all errors due to {@link Company#creditStatus}.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:CompanyCreditStatusError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="Company">
        <annotation>
          <documentation>
            A {@code Company} represents an agency, a single advertiser or an entire
            advertising network.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="id" type="xsd:long">
            <annotation>
              <documentation>
                Uniquely identifies the {@code Company}. This value is read-only and is
                assigned by Google when the company is created. This attribute is required
                for updates.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="name" type="xsd:string">
            <annotation>
              <documentation>
                The full name of the company. This attribute is required and has a maximum
                length of 127 characters.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="type" type="tns:Company.Type">
            <annotation>
              <documentation>
                Specifies what kind of company this is. This attribute is required.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="address" type="xsd:string">
            <annotation>
              <documentation>
                Specifies the address of the company. This attribute is optional and has a
                maximum length of 65,535 characters.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="email" type="xsd:string">
            <annotation>
              <documentation>
                Specifies the email of the company. This attribute is optional and has a
                maximum length of 128 characters.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="faxPhone" type="xsd:string">
            <annotation>
              <documentation>
                Specifies the fax phone number of the company. This attribute is optional
                and has a maximum length of 63 characters.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="primaryPhone" type="xsd:string">
            <annotation>
              <documentation>
                Specifies the primary phone number of the company. This attribute is
                optional and has a maximum length of 63 characters.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="externalId" type="xsd:string">
            <annotation>
              <documentation>
                Specifies the external ID of the company. This attribute is optional and
                has a maximum length of 255 characters.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="comment" type="xsd:string">
            <annotation>
              <documentation>
                Specifies the comment of the company. This attribute is optional and has a
                maximum length of 1024 characters.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="creditStatus" type="tns:Company.CreditStatus">
            <annotation>
              <documentation>
                Specifies the company's credit status. This attribute is optional and
                defaults to {@link CreditStatus#ACTIVE} when basic credit status settings
                are enabled, and {@link CreditStatus#ON_HOLD} when advanced credit status
                settings are enabled.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="settings" type="tns:CompanySettings">
            <annotation>
              <documentation>
                Specifies the default billing settings of this {@code Company}. This attribute is optional.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0"
            name="appliedLabels" type="tns:AppliedLabel">
            <annotation>
              <documentation>
                The set of labels applied to this company.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="primaryContactId" type="xsd:long">
            <annotation>
              <documentation>
                The ID of the {@link Contact} who is acting as the primary contact for this
                company. This attribute is optional.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0"
            name="appliedTeamIds" type="xsd:long">
            <annotation>
              <documentation>
                The IDs of all teams that this company is on directly.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0"
            name="thirdPartyCompanyId" type="xsd:int">
            <annotation>
              <documentation>
                Specifies the ID of the Google-recognized canonicalized form of this
                company. This attribute is optional.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0"
            name="lastModifiedDateTime" type="tns:DateTime">
            <annotation>
              <documentation>
                The date and time this company was last modified.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="CompanyError">
        <annotation>
          <documentation>
            A list of all errors associated with companies.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:CompanyError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CompanyPage">
        <annotation>
          <documentation>
            Captures a page of {@link Company} objects.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="totalResultSetSize" type="xsd:int">
            <annotation>
              <documentation>
                The size of the total result set to which this page belongs.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="startIndex" type="xsd:int">
            <annotation>
              <documentation>
                The absolute index in the total result set on which this page begins.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0" name="results" type="tns:Company">
            <annotation>
              <documentation>
                The collection of companies contained within this page.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="CompanySettings">
        <annotation>
          <documentation>
            Settings for a {@link Company}.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="billingCap" type="tns:BillingCap">
            <annotation>
              <documentation>
                Default billing cap for {@link Proposal proposals} created by the {@link Company}
                of type {@link Company.Type#ADVERTISER} in DFP Sales Manager.
                Return null if default billing setting feature is disabled or
                {@link BillingSource} is {@link BillingSource#CONTRACTED}.
                It is allowed that all of the BillingCap, BillingSchedule, BillingSource
                are null when the company has no setting about these values.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="billingSchedule" type="tns:BillingSchedule">
            <annotation>
              <documentation>
                Default billing schedule for {@link Proposal proposals} created by the {@link Company}
                of type {@link Company.Type#ADVERTISER} in DFP Sales Manager.
                Return null if default billing setting feature is disabled or
                {@link BillingSource} is not {@link BillingSource#CONTRACTED}.
                It is allowed that all of the BillingCap, BillingSchedule, BillingSource
                are null when the company has no setting about these values.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="billingSource" type="tns:BillingSource">
            <annotation>
              <documentation>
                Default billing source for {@link Proposal proposals} created by the {@link Company}
                of type {@link Company.Type#ADVERTISER} in DFP Sales Manager.
                Return null if default billing setting feature is disabled.
                It is allowed that all of the BillingCap, BillingSchedule, BillingSource
                are null when the company has no setting about these values.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="advertiserDiscount" type="xsd:long">
            <annotation>
              <documentation>
                Default advertiser discount for {@link Proposal proposals} created by the {@link Company}
                of type {@link Company.Type#ADVERTISER} in DFP Sales Manager.
                Return null if default billing setting feature is disabled or the company
                has no setting on this value.
                It presents in millipercentage (values 0 to 100000).
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="valueAddedTax" type="xsd:long">
            <annotation>
              <documentation>
                Default value added tax for {@link Proposal proposals} created by the {@link Company}
                of type {@link Company.Type#ADVERTISER} in DFP Sales Manager.
                Return null if default billing setting feature is disabled or the company
                has no setting on this value.
                It presents in millipercentage (values 0 to 100000).
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="agencyCommission" type="xsd:long">
            <annotation>
              <documentation>
                Default agency commission for {@link Proposal proposals} associated with the {@link Company}
                of type {@link Company.Type#AGENCY} in DFP Sales Manager.
                Return null if the default billing setting feature is disabled or the company
                has no setting on this value.
                It presents in millipercentage (values 0 to 100000).
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="CrossSellError">
        <annotation>
          <documentation>
            Lists all errors associated with cross selling.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:CrossSellError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CustomFieldValueError">
        <annotation>
          <documentation>
            Errors specific to editing custom field values
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:CustomFieldValueError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="Date">
        <annotation>
          <documentation>
            Represents a date.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="year" type="xsd:int">
            <annotation>
              <documentation>
                Year (e.g., 2009)
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="month" type="xsd:int">
            <annotation>
              <documentation>
                Month (1..12)
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="day" type="xsd:int">
            <annotation>
              <documentation>
                Day (1..31)
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="DateTime">
        <annotation>
          <documentation>
            Represents a date combined with the time of day.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="date" type="tns:Date"/>
          <element maxOccurs="1" minOccurs="0" name="hour" type="xsd:int"/>
          <element maxOccurs="1" minOccurs="0" name="minute" type="xsd:int"/>
          <element maxOccurs="1" minOccurs="0" name="second" type="xsd:int"/>
          <element maxOccurs="1" minOccurs="0" name="timeZoneID" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="DateTimeValue">
        <annotation>
          <documentation>
            Contains a date-time value.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="tns:DateTime">
                <annotation>
                  <documentation>
                    The {@code DateTime} value.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DateValue">
        <annotation>
          <documentation>
            Contains a date value.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="tns:Date">
                <annotation>
                  <documentation>
                    The {@code Date} value.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FeatureError">
        <annotation>
          <documentation>
            Errors related to feature management.  If you attempt using a feature that is not available to
            the current network you'll receive a FeatureError with the missing feature as the trigger.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:FeatureError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InternalApiError">
        <annotation>
          <documentation>
            Indicates that a server-side error has occured. {@code InternalApiError}s
            are generally not the result of an invalid request or message sent by the
            client.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:InternalApiError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidEmailError">
        <annotation>
          <documentation>
            Caused by supplying a value for an email attribute that is not a valid
            email address.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:InvalidEmailError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="LabelEntityAssociationError">
        <annotation>
          <documentation>
            Errors specific to creating label entity associations.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:LabelEntityAssociationError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NotNullError">
        <annotation>
          <documentation>
            Caused by supplying a null value for an attribute that cannot be null.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:NotNullError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NullError">
        <annotation>
          <documentation>
            Caused by supplying a non-null value for an attribute that should be null.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:NullError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NumberValue">
        <annotation>
          <documentation>
            Contains a numeric value.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="xsd:string">
                <annotation>
                  <documentation>
                    The numeric value represented as a string.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ParseError">
        <annotation>
          <documentation>
            Lists errors related to parsing.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ParseError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PermissionError">
        <annotation>
          <documentation>
            Errors related to incorrect permission.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:PermissionError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PublisherQueryLanguageContextError">
        <annotation>
          <documentation>
            An error that occurs while executing a PQL query contained in
            a {@link Statement} object.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:PublisherQueryLanguageContextError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PublisherQueryLanguageSyntaxError">
        <annotation>
          <documentation>
            An error that occurs while parsing a PQL query contained in a
            {@link Statement} object.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:PublisherQueryLanguageSyntaxError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="QuotaError">
        <annotation>
          <documentation>
            Describes a client-side error on which a user is attempting
            to perform an action to which they have no quota remaining.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:QuotaError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RegExError">
        <annotation>
          <documentation>
            Caused by supplying a value for an object attribute that does not conform
            to a documented valid regular expression.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RegExError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RequiredCollectionError">
        <annotation>
          <documentation>
            A list of all errors to be used for validating sizes of collections.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RequiredCollectionError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RequiredError">
        <annotation>
          <documentation>
            Errors due to missing required field.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:RequiredError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ServerError">
        <annotation>
          <documentation>
            Errors related to the server.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:ServerError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SetValue">
        <annotation>
          <documentation>
            Contains a set of {@link Value Values}. May not contain duplicates.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="unbounded" minOccurs="0" name="values" type="tns:Value">
                <annotation>
                  <documentation>
                    The values. They must all be the same type of {@code Value} and not contain duplicates.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SoapRequestHeader">
        <annotation>
          <documentation>
            Represents the SOAP request header used by API requests.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="networkCode" type="xsd:string">
            <annotation>
              <documentation>
                The network code to use in the context of a request.
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="applicationName" type="xsd:string">
            <annotation>
              <documentation>
                The name of client library application.
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="SoapResponseHeader">
        <annotation>
          <documentation>
            Represents the SOAP request header used by API responses.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="requestId" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="responseTime" type="xsd:long"/>
        </sequence>
      </complexType>
      <complexType name="Statement">
        <annotation>
          <documentation>
            Captures the {@code WHERE}, {@code ORDER BY} and {@code LIMIT} clauses of a
            PQL query. Statements are typically used to retrieve objects of a predefined
            domain type, which makes SELECT clause unnecessary.
            &lt;p&gt;
            An example query text might be {@code "WHERE status = 'ACTIVE' ORDER BY id
            LIMIT 30"}.
            &lt;/p&gt;
            &lt;p&gt;
            Statements support bind variables. These are substitutes for literals
            and can be thought of as input parameters to a PQL query.
            &lt;/p&gt;
            &lt;p&gt;
            An example of such a query might be {@code "WHERE id = :idValue"}.
            &lt;/p&gt;
            &lt;p&gt;
            Statements also support use of the LIKE keyword. This provides partial and
            wildcard string matching.
            &lt;/p&gt;
            &lt;p&gt;
            An example of such a query might be {@code "WHERE name LIKE 'startswith%'"}.
            &lt;/p&gt;
            If using an API version newer than V201010, the value for the variable
            idValue must then be set with an object of type {@link Value} and is one of
            {@link NumberValue}, {@link TextValue} or {@link BooleanValue}.
            &lt;p&gt;
            If using an API version older than or equal to V201010, the value for the
            variable idValue must then be set with an object of type {@link Param} and is
            one of {@link DoubleParam}, {@link LongParam} or {@link StringParam}.
            &lt;/p&gt;
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="query" type="xsd:string">
            <annotation>
              <documentation>
                Holds the query in PQL syntax. The syntax is:&lt;br&gt;
                &lt;code&gt;[WHERE &lt;condition&gt; {[AND | OR] &lt;condition&gt; ...}]&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;[ORDER BY &lt;property&gt; [ASC | DESC]]&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;[LIMIT {[&lt;offset&gt;,] &lt;count&gt;} | {&lt;count&gt; OFFSET &lt;offset&gt;}]&lt;/code&gt;&lt;br&gt;
                &lt;p&gt;
                &lt;code&gt;&lt;condition&gt;&lt;/code&gt;&lt;br&gt;
                &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
                &lt;code&gt;:= &lt;property&gt; {&lt; | &lt;= | &gt; | &gt;= | = | != } &lt;value&gt;&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;&lt;condition&gt;&lt;/code&gt;&lt;br&gt;
                &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
                &lt;code&gt;:= &lt;property&gt; {&lt; | &lt;= | &gt; | &gt;= | = | != } &lt;bind variable&gt;&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;&lt;condition&gt; := &lt;property&gt; IN &lt;list&gt;&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;&lt;condition&gt; := &lt;property&gt; IS NULL&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;&lt;condition&gt; := &lt;property&gt; LIKE &lt;wildcard%match&gt;&lt;/code&gt;&lt;br&gt;
                &lt;code&gt;&lt;bind variable&gt; := :&lt;name&gt;&lt;/code&gt;&lt;br&gt;
                &lt;/p&gt;
              </documentation>
            </annotation>
          </element>
          <element maxOccurs="unbounded" minOccurs="0" name="values" type="tns:String_ValueMapEntry">
            <annotation>
              <documentation>
                Holds keys and values for bind variables and their values. The key is the
                name of the bind variable. The value is the literal value of the variable.
                &lt;p&gt;
                In the example {@code "WHERE status = :bindStatus ORDER BY id LIMIT 30"},
                the bind variable, represented by {@code :bindStatus} is named {@code
                bindStatus}, which would also be the parameter map key. The bind variable's
                value would be represented by a parameter map value of type
                {@link TextValue}. The final result, for example, would be an entry of
                {@code "bindStatus" =&gt; StringParam("ACTIVE")}.
                &lt;/p&gt;
              </documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="StatementError">
        <annotation>
          <documentation>
            An error that occurs while parsing {@link Statement} objects.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:StatementError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StringLengthError">
        <annotation>
          <documentation>
            Errors for Strings which do not meet given length constraints.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:StringLengthError.Reason"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="String_ValueMapEntry">
        <annotation>
          <documentation>
            This represents an entry in a map with a key of type String
            and value of type Value.
          </documentation>
        </annotation>
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="key" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="value" type="tns:Value"/>
        </sequence>
      </complexType>
      <complexType name="TeamError">
        <annotation>
          <documentation>
            Errors related to a Team.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="reason" type="tns:TeamError.Reason">
                <annotation>
                  <documentation>
                    The error reason represented by an enum.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="TextValue">
        <annotation>
          <documentation>
            Contains a string value.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:Value">
            <sequence>
              <element maxOccurs="1" minOccurs="0" name="value" type="xsd:string">
                <annotation>
                  <documentation>
                    The string value.
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="TypeError">
        <annotation>
          <documentation>
            An error for a field which is an invalid type.
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UniqueError">
        <annotation>
          <documentation>
            An error for a field which must satisfy a uniqueness constraint
          </documentation>
        </annotation>
        <complexContent>
          <extension base="tns:ApiError">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="Value">
        <annotation>
          <documentation>
            {@code Value} represents a value.
          </documentation>
        </annotation>
        <sequence/>
      </complexType>
      <simpleType name="ApiVersionError.Reason">
        <restriction base="xsd:string">
          <enumeration value="UPDATE_TO_NEWER_VERSION">
            <annotation>
              <documentation>
                Indicates that the operation is not allowed in the version the request
                was made in.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="AuthenticationError.Reason">
        <restriction base="xsd:string">
          <enumeration value="AMBIGUOUS_SOAP_REQUEST_HEADER">
            <annotation>
              <documentation>
                The SOAP message contains a request header with an ambiguous definition
                of the authentication header fields. This means either the {@code
                authToken} and {@code oAuthToken} fields were both null or both were
                specified. Exactly one value should be specified with each request.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_EMAIL">
            <annotation>
              <documentation>
                The login provided is invalid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="AUTHENTICATION_FAILED">
            <annotation>
              <documentation>
                Tried to authenticate with provided information, but failed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_OAUTH_SIGNATURE">
            <annotation>
              <documentation>
                The OAuth provided is invalid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_SERVICE">
            <annotation>
              <documentation>
                The specified service to use was not recognized.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_SOAP_REQUEST_HEADER">
            <annotation>
              <documentation>
                The SOAP message is missing a request header with an {@code authToken}
                and optional {@code networkCode}.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_AUTHENTICATION_HTTP_HEADER">
            <annotation>
              <documentation>
                The HTTP request is missing a request header with an {@code authToken}
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_AUTHENTICATION">
            <annotation>
              <documentation>
                The request is missing an {@code authToken}
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NOT_WHITELISTED_FOR_API_ACCESS">
            <annotation>
              <documentation>
                The customer is not whitelisted for API access.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NO_NETWORKS_TO_ACCESS">
            <annotation>
              <documentation>
                The user is not associated with any network.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NETWORK_NOT_FOUND">
            <annotation>
              <documentation>
                No network for the given {@code networkCode} was found.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NETWORK_CODE_REQUIRED">
            <annotation>
              <documentation>
                The user has access to more than one network, but did not provide a
                {@code networkCode}.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONNECTION_ERROR">
            <annotation>
              <documentation>
                An error happened on the server side during connection to authentication
                service.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="GOOGLE_ACCOUNT_ALREADY_ASSOCIATED_WITH_NETWORK">
            <annotation>
              <documentation>
                The user tried to create a test network using an account that already is
                associated with a network.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="AvailableBillingError.Reason">
        <annotation>
          <documentation>
            The error reason represented by an enum.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="BILLING_SOURCE_IS_NOT_AVAILABLE">
            <annotation>
              <documentation>
                The billing source provided is not available in proposal network settings.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="BILLING_SCHEDULE_IS_NOT_AVAILABLE">
            <annotation>
              <documentation>
                The billing schedule provided is not available in proposal network settings.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="BILLING_CAP_IS_NOT_AVAILABLE">
            <annotation>
              <documentation>
                The billing cap provided is not available in proposal network settings.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="BillingCap">
        <annotation>
          <documentation>
            Determines how the revenue amount will be capped for each billing month. This cannot be used when
            {@link BillingSource} is {@link BillingSource#CONTRACTED}.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="NO_CAP">
            <annotation>
              <documentation>
                There is no cap for each billing month.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CAPPED_CUMULATIVE">
            <annotation>
              <documentation>
                Use a billing source of capped actuals with a billing cap of cumulative to bill your
                advertiser up to a campaign's capped amount, regardless of the number of impressions that
                are served each month.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CAPPED_PER_BILLING_CYCLE">
            <annotation>
              <documentation>
                Use a billing source of capped actuals with a billing cap of the billing cycle to bill your
                advertiser up to a capped amount for each billing cycle of a campaign, regardless of the
                number of impressions that are served.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CAPPED_CUMULATIVE_PER_BILLING_CYCLE">
            <annotation>
              <documentation>
                Use a billing source of capped actuals with a billing cap of cumulative per billing cycle
                to bill your advertiser up to a capped amount for each billing cycle of a campaign and carry
                forward the balance of over- or under-delivered impressions towards the number of impressions
                delivered in future billing cycles of the campaign.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CAPPED_WITH_ROLLOVER_PER_BILLING_CYCLE">
            <annotation>
              <documentation>
                Use a billing source of capped actuals with a billing cap of cumulative per billing cycle
                to bill your advertiser up to a capped amount for each cycle of a campaign and carry forward
                the balance of over- or under-delivered impressions towards the number of impressions
                delivered in future cycles of the campaign.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="BillingSchedule">
        <annotation>
          <documentation>
            Determines how much to bill in each billing cycle when a proposal is charged based on the
            contracted value. This can only be used when {@link BillingSource} is
            {@link BillingSource#CONTRACTED}.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="PREPAID">
            <annotation>
              <documentation>
                Charged based on the contracted value after the first month of the campaign.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="END_OF_THE_CAMPAIGN">
            <annotation>
              <documentation>
                Charged based on the contracted value after the last month of the campaign.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="STRAIGHTLINE">
            <annotation>
              <documentation>
                Use a billing source of contracted with a billing schedule of straightline to bill your
                advertiser the same amount each month, regardless of the number of days in each month.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="PRORATED">
            <annotation>
              <documentation>
                Use a billing source of contracted with a billing schedule of prorated to bill your
                advertiser proportionally based on the amount of days in each month.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="BillingSource">
        <annotation>
          <documentation>
            Determines which billable numbers or delivery data (impressions, clicks, and so on)
            will be used for billing purposes.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="CONTRACTED">
            <annotation>
              <documentation>
                Charge based on the quantity of impressions, clicks, or days booked, regardless of
                what actually delivered.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DFP_VOLUME">
            <annotation>
              <documentation>
                Charge based on what actually delivered counted by DFP
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="THIRD_PARTY_VOLUME">
            <annotation>
              <documentation>
                Charge based on what actually delivered counted by third party ads server
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="CollectionSizeError.Reason">
        <restriction base="xsd:string">
          <enumeration value="TOO_LARGE"/>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="CommonError.Reason">
        <annotation>
          <documentation>
            Describes reasons for common errors
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="NOT_FOUND">
            <annotation>
              <documentation>
                Indicates that an attempt was made to retrieve an entity that does not
                exist.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ALREADY_EXISTS">
            <annotation>
              <documentation>
                Indicates that an attempt was made to create an entity that already
                exists.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DUPLICATE_OBJECT">
            <annotation>
              <documentation>
                Indicates that two elements in the collection were identical.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CANNOT_UPDATE">
            <annotation>
              <documentation>
                Indicates that an attempt was made to change an immutable field.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONCURRENT_MODIFICATION">
            <annotation>
              <documentation>
                Indicates that another request attempted to update the same data in the same network
                at about the same time. Please wait and try the request again.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="CompanyCreditStatusError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="COMPANY_CREDIT_STATUS_CHANGE_NOT_ALLOWED">
            <annotation>
              <documentation>
                The user's role does not have permission to change
                {@link Company#creditStatus} from the default value. The default value is
                {@link Company.CreditStatus#ACTIVE} for the Basic credit status setting
                and {@link Company.CreditStatus#ON_HOLD} for the Advanced credit status
                setting.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CANNOT_USE_CREDIT_STATUS_SETTING">
            <annotation>
              <documentation>
                The network has not been enabled for editing credit status settings for
                companies.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CANNOT_USE_ADVANCED_CREDIT_STATUS_SETTING">
            <annotation>
              <documentation>
                The network has not been enabled for the Advanced credit status
                settings for companies. {@link Company#creditStatus} must be either
                {@code ACTIVE} or {@code INACTIVE}.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNACCEPTABLE_COMPANY_CREDIT_STATUS_FOR_ORDER">
            <annotation>
              <documentation>
                An order cannot be created or updated because the
                {@link Order#advertiserId} or the {@link Order#agencyId} it is associated
                with has {@link Company#creditStatus} that is not {@code ACTIVE} or
                {@code ON_HOLD}.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNACCEPTABLE_COMPANY_CREDIT_STATUS_FOR_LINE_ITEM">
            <annotation>
              <documentation>
                A line item cannot be created for the order because the
                {@link Order#advertiserId} or {Order#agencyId} it is associated with has
                {@link Company#creditStatus} that is not {@code ACTIVE} or
                {@code ON_HOLD}.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CANNOT_BLOCK_COMPANY_TOO_MANY_APPROVED_ORDERS">
            <annotation>
              <documentation>
                The company cannot be blocked because there are more than 200 approved
                orders of the company. Archive some, so that there are less than 200 of
                them.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="Company.CreditStatus">
        <annotation>
          <documentation>
            Specifies the credit-worthiness of the company for which the publisher runs
            an order. By doing so, the publisher can control the running of campaigns
            for the company. A publisher can choose between Basic and Advanced Credit
            Status settings. This feature needs to be enabled in the DoubleClick For
            Publishers web site. Also the kind of setting you need - Basic or Advanced
            must be configured. If Basic is enabled then, the values allowed are
            {@code ACTIVE} and {@code INACTIVE}. If Advanced is chosen, then all values
            are allowed. Choosing an Advanced setting when only the Basic feature has
            been enabled, or using the Basic setting without turning the feature on
            will result in an error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="ACTIVE">
            <annotation>
              <documentation>
                When the credit status is active, all line items in all orders
                belonging to the company will be served. This is a Basic as well as an
                Advanced Credit Status setting.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ON_HOLD">
            <annotation>
              <documentation>
                When the credit status is on hold, the publisher cannot activate new line
                items of the company. However, line items that were activated before the
                credit status change will remain active. You can still create orders and
                line items for the company. This is an Advanced Credit Status setting.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CREDIT_STOP">
            <annotation>
              <documentation>
                When the credit status is credit stop, the publisher cannot activate new
                line items of the company. However, line items that were activated before
                the credit status change will remain active. You cannot create any new
                orders or line items for the company. This is an Advanced Credit Status
                setting.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INACTIVE">
            <annotation>
              <documentation>
                When the credit status is inactive, the publisher cannot activate new
                line items of the company. However, line items that were activated before
                the credit status change will remain active. You cannot create any new
                orders or line items for the company. It is used to mark companies with
                which business is to be discontinued. Such companies are not listed in
                Doubleclick for Publishers website. This is a Basic as well as an
                Advanced Credit Status setting.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="BLOCKED">
            <annotation>
              <documentation>
                When the credit status of a company is marked blocked, then all active
                line items belonging to the company will stop serving with immediate
                effect. You cannot active new line items of the company nor can you
                create any new orders or line items belonging to the company. This is an
                Advanced Credit Status setting.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="Company.Type">
        <annotation>
          <documentation>
            The type of the company. Once a company is created, it is not possible to
            change its type.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="HOUSE_ADVERTISER">
            <annotation>
              <documentation>
                The publisher's own advertiser. When no outside advertiser buys its
                inventory, the publisher may run its own advertising campaigns.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="HOUSE_AGENCY">
            <annotation>
              <documentation>
                The publisher's own agency.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ADVERTISER">
            <annotation>
              <documentation>
                A business entity that buys publisher inventory to run advertising
                campaigns. An advertiser is optionally associated with one or more
                agencies.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="AGENCY">
            <annotation>
              <documentation>
                A business entity that offers services, such as advertising creation,
                placement, and management, to advertisers.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="AD_NETWORK">
            <annotation>
              <documentation>
                A company representing multiple advertisers and agencies.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="AFFILIATE_DISTRIBUTION_PARTNER">
            <annotation>
              <documentation>
                A company representing a content owner's affiliate/distribution partner.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONTENT_PARTNER">
            <annotation>
              <documentation>
                A company representing a distributor's content partner.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API
                version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="CompanyError.Reason">
        <annotation>
          <documentation>
            Enumerates all possible company specific errors.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="CANNOT_SET_THIRD_PARTY_COMPANY_DUE_TO_TYPE">
            <annotation>
              <documentation>
                Indicates that an attempt was made to set a third party company for a
                company whose type is not the same as the third party company.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CANNOT_UPDATE_COMPANY_TYPE">
            <annotation>
              <documentation>
                Indicates that an invalid attempt was made to change a company's type.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_COMPANY_TYPE">
            <annotation>
              <documentation>
                Indicates that this type of company is not supported.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="PRIMARY_CONTACT_DOES_NOT_BELONG_TO_THIS_COMPANY">
            <annotation>
              <documentation>
                Indicates that an attempt was made to assign a primary contact who
                does not belong to the specified company.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="THIRD_PARTY_STATS_PROVIDER_IS_WRONG_ROLE_TYPE">
            <annotation>
              <documentation>
                Indicates that the user specified as the third party stats provider
                is of the wrong role type.  The user must have the third party stats
                provider role.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_LABEL_ASSOCIATION">
            <annotation>
              <documentation>
                Labels can only be applied to {@link Company.Type#ADVERTISER},
                {@link Company.Type#HOUSE_ADVERTISER}, and {@link Company.Type#AD_NETWORK} company types.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_COMPANY_TYPE_FOR_DEFAULT_BILLING_SETTING">
            <annotation>
              <documentation>
                Indicates that the {@link Company.Type} does not support default billing settings.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_DEFAULT_BILLING_SETTING">
            <annotation>
              <documentation>
                Indicates that the format of the default billing setting is wrong.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="CrossSellError.Reason">
        <annotation>
          <documentation>
            The reason of the error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNSUPPORTED_RESERVATION_TYPE">
            <annotation>
              <documentation>
                Only standard or sponsorship line item types are supported for cross selling.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NO_VALID_ELIGIBLE_RESERVATION_TYPES">
            <annotation>
              <documentation>
                A cross-sell partner must have at least one eligible line item type.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="COMPANY_IS_NOT_DISTRIBUTION_PARTNER">
            <annotation>
              <documentation>
                A company for cross-sell partner must be an affiliate/distribution company.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CHANGING_PARTNER_NETWORK_IS_NOT_SUPPORTED">
            <annotation>
              <documentation>
                The network code of a cross-sell partner cannot be changed.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_DISTRIBUTOR_PARTNER_NAME">
            <annotation>
              <documentation>
                A cross-sell partner must have a partner name.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DISTRIBUTOR_NETWORK_MISSING_PUBLISHER_FEATURE">
            <annotation>
              <documentation>
                The cross-sell distributor publisher feature must be enabled.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONTENT_PROVIDER_NETWORK_MISSING_PUBLISHER_FEATURE">
            <annotation>
              <documentation>
                The cross-sell content provider publisher feature must be enabled on the partner's network.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_DISTRIBUTOR_PARTNER_NAME">
            <annotation>
              <documentation>
                The cross-sell partner name conflicts with an ad unit name on the partner's network.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_CONTENT_PROVIDER_NETWORK">
            <annotation>
              <documentation>
                The network code of a cross-sell partner is invalid.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONTENT_PROVIDER_NETWORK_CANNOT_BE_ACTIVE_NETWORK">
            <annotation>
              <documentation>
                The content provider network must be different than the distributor network.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CONTENT_PROVIDER_NETWORK_ALREADY_ENABLED_FOR_CROSS_SELLING">
            <annotation>
              <documentation>
                The same network code was already enabled for cross-sell in a different company.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DISTRIBUTOR_RULE_VIOLATION_ERROR">
            <annotation>
              <documentation>
                A rule defined by the cross selling distributor has been violated by a line item targeting
                a shared ad unit. Violating this rule is an error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DISTRIBUTOR_RULE_VIOLATION_WARNING">
            <annotation>
              <documentation>
                A rule defined by the cross selling distributor has been violated by a line item targeting
                a shared ad unit. Violating this rule is a warning.
                
                &lt;p&gt;By setting {@link LineItem#skipCrossSellingRuleWarningChecks}, the content partner can
                suppress the warning (and create or save the line item).
                
                &lt;p&gt;This flag is available beginning in V201411.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="CustomFieldValueError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="CUSTOM_FIELD_NOT_FOUND">
            <annotation>
              <documentation>
                An attempt was made to modify or create a {@link CustomFieldValue} for
                a {@link CustomField} that does not exist.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CUSTOM_FIELD_INACTIVE">
            <annotation>
              <documentation>
                An attempt was made to create a new value for a custom field
                that is inactive.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="CUSTOM_FIELD_OPTION_NOT_FOUND">
            <annotation>
              <documentation>
                An attempt was made to modify or create a {@link CustomFieldValue} corresponding
                to a {@link CustomFieldOption} that could not be found.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="FeatureError.Reason">
        <restriction base="xsd:string">
          <enumeration value="MISSING_FEATURE">
            <annotation>
              <documentation>
                A feature is being used that is not enabled on the current network.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="InternalApiError.Reason">
        <annotation>
          <documentation>
            The single reason for the internal API error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNEXPECTED_INTERNAL_API_ERROR">
            <annotation>
              <documentation>
                API encountered an unexpected internal error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TRANSIENT_ERROR">
            <annotation>
              <documentation>
                A temporary error occurred during the request. Please retry.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The cause of the error is not known or only defined in newer versions.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DOWNTIME">
            <annotation>
              <documentation>
                The API is currently unavailable for a planned downtime.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="InvalidEmailError.Reason">
        <annotation>
          <documentation>
            Describes reasons for an email to be invalid.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="INVALID_FORMAT">
            <annotation>
              <documentation>
                The value is not a valid email address.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="LabelEntityAssociationError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="DUPLICATE_ASSOCIATION">
            <annotation>
              <documentation>
                The label has already been attached to the entity.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="INVALID_ASSOCIATION">
            <annotation>
              <documentation>
                A label is being applied to an entity that does not support that entity
                type.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="DUPLICATE_ASSOCIATION_WITH_NEGATION">
            <annotation>
              <documentation>
                The same label is being applied and negated to the same entity.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="NotNullError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="ARG1_NULL">
            <annotation>
              <documentation>
                Assuming that a method will not have more than 3 arguments, if it does,
                return NULL
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ARG2_NULL"/>
          <enumeration value="ARG3_NULL"/>
          <enumeration value="NULL"/>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="NullError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="NOT_NULL"/>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="ParseError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNPARSABLE">
            <annotation>
              <documentation>
                Indicates an error in parsing an attribute.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="PermissionError.Reason">
        <annotation>
          <documentation>
            Describes reasons for permission errors.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="PERMISSION_DENIED">
            <annotation>
              <documentation>
                User does not have the required permission for the request.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="PublisherQueryLanguageContextError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNEXECUTABLE">
            <annotation>
              <documentation>
                Indicates that there was an error executing the PQL.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="PublisherQueryLanguageSyntaxError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="UNPARSABLE">
            <annotation>
              <documentation>
                Indicates that there was a PQL syntax error.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="QuotaError.Reason">
        <restriction base="xsd:string">
          <enumeration value="EXCEEDED_QUOTA">
            <annotation>
              <documentation>
                The number of requests made per second is too high and has exceeded the
                allowable limit. The recommended approach to handle this error is to wait
                about 5 seconds and then retry the request. Note that this does not
                guarantee the request will succeed. If it fails again, try increasing the
                wait time.
                &lt;p&gt;
                Another way to mitigate this error is to limit requests to 2 per second for
                Small Business networks, or 8 per second for Premium networks. Once again
                this does not guarantee that every request will succeed, but may help
                reduce the number of times you receive this error.
                &lt;/p&gt;
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="RegExError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="INVALID">
            <annotation>
              <documentation>
                Invalid value found.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="NULL">
            <annotation>
              <documentation>
                Null value found.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="RequiredCollectionError.Reason">
        <restriction base="xsd:string">
          <enumeration value="REQUIRED">
            <annotation>
              <documentation>
                A required collection is missing.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TOO_LARGE">
            <annotation>
              <documentation>
                Collection size is too large.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="TOO_SMALL">
            <annotation>
              <documentation>
                Collection size is too small.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="RequiredError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="REQUIRED">
            <annotation>
              <documentation>
                Missing required field.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="ServerError.Reason">
        <annotation>
          <documentation>
            Describes reasons for server errors
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="SERVER_ERROR">
            <annotation>
              <documentation>
                Indicates that an unexpected error occured.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="SERVER_BUSY">
            <annotation>
              <documentation>
                Indicates that the server is currently experiencing a high load. Please
                wait and try your request again.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="StatementError.Reason">
        <restriction base="xsd:string">
          <enumeration value="VARIABLE_NOT_BOUND_TO_VALUE">
            <annotation>
              <documentation>
                A bind variable has not been bound to a value.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="StringLengthError.Reason">
        <restriction base="xsd:string">
          <enumeration value="TOO_LONG"/>
          <enumeration value="TOO_SHORT"/>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="TeamError.Reason">
        <annotation>
          <documentation>
            The reasons for the target error.
          </documentation>
        </annotation>
        <restriction base="xsd:string">
          <enumeration value="ENTITY_NOT_ON_USERS_TEAMS">
            <annotation>
              <documentation>
                User cannot use this entity because it is not on any of the user's teams.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="AD_UNITS_NOT_ON_ORDER_TEAMS">
            <annotation>
              <documentation>
                The targeted or excluded ad unit must be on the order's teams.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="PLACEMENTS_NOT_ON_ORDER_TEAMS">
            <annotation>
              <documentation>
                The targeted placement must be on the order's teams.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="MISSING_USERS_TEAM">
            <annotation>
              <documentation>
                Entity cannot be created because it is not on any of the user's teams.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ALL_TEAM_ASSOCIATION_NOT_ALLOWED">
            <annotation>
              <documentation>
                A team that gives access to all entities of a given type cannot be
                associated with an entity of that type.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="ALL_TEAM_ACCESS_OVERRIDE_NOT_ALLOWED">
            <annotation>
              <documentation>
                The all entities team access type cannot be overridden.
              </documentation>
            </annotation>
          </enumeration>
          <enumeration value="UNKNOWN">
            <annotation>
              <documentation>
                The value returned if the actual value is not exposed by the requested API version.
              </documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <element name="createCompanies">
        <annotation>
          <documentation>
            Creates new {@link Company} objects.
            
            @param companies the companies to create
            @return the created companies with their IDs filled in
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0"
              name="companies" type="tns:Company"/>
          </sequence>
        </complexType>
      </element>
      <element name="createCompaniesResponse">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="rval" type="tns:Company"/>
          </sequence>
        </complexType>
      </element>
      <element name="ApiExceptionFault" type="tns:ApiException">
        <annotation>
          <documentation>
            A fault element of type ApiException.
          </documentation>
        </annotation>
      </element>
      <element name="getCompaniesByStatement">
        <annotation>
          <documentation>
            Gets a {@link CompanyPage} of {@link Company} objects that satisfy the
            given {@link Statement#query}. The following fields are supported for
            filtering:
            
            &lt;table&gt;
            &lt;tr&gt;
            &lt;th scope="col"&gt;PQL Property&lt;/th&gt; &lt;th scope="col"&gt;Object Property&lt;/th&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;{@code id}&lt;/td&gt;
            &lt;td&gt;{@link Company#id}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;{@code name}&lt;/td&gt;
            &lt;td&gt;{@link Company#name}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;{@code type}&lt;/td&gt;
            &lt;td&gt;{@link Company#type}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;{@code lastModifiedDateTime}&lt;/td&gt;
            &lt;td&gt;{@link Company#lastModifiedDateTime}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;/table&gt;
            
            @param filterStatement a Publisher Query Language statement used to filter
            a set of companies
            @return the companies that match the given filter
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="filterStatement" type="tns:Statement"/>
          </sequence>
        </complexType>
      </element>
      <element name="getCompaniesByStatementResponse">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="rval" type="tns:CompanyPage"/>
          </sequence>
        </complexType>
      </element>
      <element name="updateCompanies">
        <annotation>
          <documentation>
            Updates the specified {@link Company} objects.
            
            @param companies the companies to update
            @return the updated companies
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0"
              name="companies" type="tns:Company"/>
          </sequence>
        </complexType>
      </element>
      <element name="updateCompaniesResponse">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="rval" type="tns:Company"/>
          </sequence>
        </complexType>
      </element>
      <element name="RequestHeader" type="tns:SoapRequestHeader"/>
      <element name="ResponseHeader" type="tns:SoapResponseHeader"/>
    </schema>
  </wsdl:types>
  <wsdl:message name="RequestHeader">
    <wsdl:part element="tns:RequestHeader" name="RequestHeader"/>
  </wsdl:message>
  <wsdl:message name="ResponseHeader">
    <wsdl:part element="tns:ResponseHeader" name="ResponseHeader"/>
  </wsdl:message>
  <wsdl:message name="createCompaniesRequest">
    <wsdl:part element="tns:createCompanies" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createCompaniesResponse">
    <wsdl:part element="tns:createCompaniesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ApiException">
    <wsdl:part element="tns:ApiExceptionFault" name="ApiException"/>
  </wsdl:message>
  <wsdl:message name="getCompaniesByStatementRequest">
    <wsdl:part element="tns:getCompaniesByStatement" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getCompaniesByStatementResponse">
    <wsdl:part element="tns:getCompaniesByStatementResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateCompaniesRequest">
    <wsdl:part element="tns:updateCompanies" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateCompaniesResponse">
    <wsdl:part element="tns:updateCompaniesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="CompanyServiceInterface">
    <wsdl:documentation>
      Provides operations for creating, updating and retrieving {@link Company}
      objects.
    </wsdl:documentation>
    <wsdl:operation name="createCompanies">
      <wsdl:documentation>
        Creates new {@link Company} objects.
        
        @param companies the companies to create
        @return the created companies with their IDs filled in
      </wsdl:documentation>
      <wsdl:input message="tns:createCompaniesRequest" name="createCompaniesRequest"/>
      <wsdl:output message="tns:createCompaniesResponse" name="createCompaniesResponse"/>
      <wsdl:fault message="tns:ApiException" name="ApiException"/>
    </wsdl:operation>
    <wsdl:operation name="getCompaniesByStatement">
      <wsdl:documentation>
        Gets a {@link CompanyPage} of {@link Company} objects that satisfy the
        given {@link Statement#query}. The following fields are supported for
        filtering:
        
        &lt;table&gt;
        &lt;tr&gt;
        &lt;th scope="col"&gt;PQL Property&lt;/th&gt; &lt;th scope="col"&gt;Object Property&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;{@code id}&lt;/td&gt;
        &lt;td&gt;{@link Company#id}&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;{@code name}&lt;/td&gt;
        &lt;td&gt;{@link Company#name}&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;{@code type}&lt;/td&gt;
        &lt;td&gt;{@link Company#type}&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;{@code lastModifiedDateTime}&lt;/td&gt;
        &lt;td&gt;{@link Company#lastModifiedDateTime}&lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        
        @param filterStatement a Publisher Query Language statement used to filter
        a set of companies
        @return the companies that match the given filter
      </wsdl:documentation>
      <wsdl:input message="tns:getCompaniesByStatementRequest" name="getCompaniesByStatementRequest"/>
      <wsdl:output message="tns:getCompaniesByStatementResponse" name="getCompaniesByStatementResponse"/>
      <wsdl:fault message="tns:ApiException" name="ApiException"/>
    </wsdl:operation>
    <wsdl:operation name="updateCompanies">
      <wsdl:documentation>
        Updates the specified {@link Company} objects.
        
        @param companies the companies to update
        @return the updated companies
      </wsdl:documentation>
      <wsdl:input message="tns:updateCompaniesRequest" name="updateCompaniesRequest"/>
      <wsdl:output message="tns:updateCompaniesResponse" name="updateCompaniesResponse"/>
      <wsdl:fault message="tns:ApiException" name="ApiException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CompanyServiceSoapBinding" type="tns:CompanyServiceInterface">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="createCompanies">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createCompaniesRequest">
        <wsdlsoap:header message="tns:RequestHeader"
          part="RequestHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createCompaniesResponse">
        <wsdlsoap:header message="tns:ResponseHeader"
          part="ResponseHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault name="ApiException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCompaniesByStatement">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getCompaniesByStatementRequest">
        <wsdlsoap:header message="tns:RequestHeader"
          part="RequestHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCompaniesByStatementResponse">
        <wsdlsoap:header message="tns:ResponseHeader"
          part="ResponseHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault name="ApiException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCompanies">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updateCompaniesRequest">
        <wsdlsoap:header message="tns:RequestHeader"
          part="RequestHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateCompaniesResponse">
        <wsdlsoap:header message="tns:ResponseHeader"
          part="ResponseHeader" use="literal"/>
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault name="ApiException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CompanyService">
    <wsdl:port binding="tns:CompanyServiceSoapBinding" name="CompanyServiceInterfacePort">
      <wsdlsoap:address location="https://ads.google.com/apis/ads/publisher/v201508/CompanyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
